name: PR

on: pull_request

env:
  STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
  KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
  KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

jobs:
#  lint:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Setup Ruby
#        uses: actions/setup-ruby@v1
#        with:
#          ruby-version: '2.6'
#      - name: Install danger
#        run: |
#          gem install bundler
#          bundle install
#      - name: ktlint
#        run: ./gradlew ktlintCheck --continue
#      - name: Slack notification
#        uses: rtCamp/action-slack-notify@master
#        if: failure()
#        env:
#          SLACK_COLOR: '#FF0000'
#          SLACK_TITLE: ':fire::fire::fire: ktlint failed :fire::fire::fire:'
#          SLACK_MESSAGE: "ktlint failed! Please check github!"
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_FAILURE }}
#      - name: Run danger
#        run: danger
#        if: always()
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  gradle-versions:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Setup Ruby
#        uses: actions/setup-ruby@v1
#        with:
#          ruby-version: '2.6'
#      - name: Install danger
#        run: |
#          gem install bundler
#          bundle install
#      - name: Gradle Versions Plugin
#        run: ./gradlew dependencyUpdate
#      - name: Run danger
#        run: danger
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
#    needs: lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Decrypt
        run: .github/scripts/decrypt_secret.sh
        env:
          GPG_SECRET: ${{ secrets.GPG_SECRET }}
      - name: Build
        run: ./gradlew assembleDebug
      - name: Slack notification
        uses: rtCamp/action-slack-notify@master
        if: failure()
        env:
          SLACK_COLOR: '#FF0000'
          SLACK_TITLE: ':fire::fire::fire: Build failed :fire::fire::fire:'
          SLACK_MESSAGE: "Build failed! Please check github!"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_FAILURE }}
      - name: Deploy to DeployGate
        run: .github/scripts/deploy_on_pr.sh
        env:
          DEPLOY_GATE_TOKEN: ${{secrets.DEPLOY_GATE_TOKEN}}
          DEPLOY_GATE_USER_NAME: ${{secrets.DEPLOY_GATE_USER_NAME}}
      - name: Slack notification
        uses: rtCamp/action-slack-notify@master
        if: env.DEPLOY_SUCCESS == 'true'
        env:
          SLACK_COLOR: '#00FF00'
          SLACK_TITLE: ':rocket::commit: Deploy(PR) :commit::rocket:'
          SLACK_MESSAGE: "Deploy success!\nThis deploy is based on \"${{ env.DEPLOY_MESSAGE }}\"\n<https://deploygate.com/users/${{secrets.DEPLOY_GATE_USER_NAME}}/apps/jp.kuaddo.tsuidezake.debug | Download link>"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DEPLOY }}

#  test:
#    needs: lint
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Setup Ruby
#        uses: actions/setup-ruby@v1
#        with:
#          ruby-version: '2.6'
#      - name: Install danger
#        run: |
#          gem install bundler
#          bundle install
#      - name: Test
#        run: ./gradlew testDebugUnitTest
#      - name: Slack notification
#        uses: rtCamp/action-slack-notify@master
#        if: failure()
#        env:
#          SLACK_COLOR: '#FF0000'
#          SLACK_TITLE: ':fire::fire::fire: Test failed :fire::fire::fire:'
#          SLACK_MESSAGE: "Test failed! Please check github!"
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_FAILURE }}
#      - name: Run danger
#        run: danger
#        if: always()
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Jacoco
#        run: ./gradlew jacocoTestReport
#      - name: Codecov
#        run: bash <(curl -s https://codecov.io/bash)
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
